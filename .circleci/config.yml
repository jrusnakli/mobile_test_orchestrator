version: 2
jobs:
  build:
    machine:
      image: android:202102-01
    working_directory: ~/code
    environment:
      JVM_OPTS: -Xmx3200m
      EMULATOR_OPTS: "-no-window -no-audio -no-accel"
      PYTHONASYNCIODEBUG: 1
      CIRCLECI: 1
    steps:
      - checkout
      - restore_cache:
          key: image2-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - run:
          name: Create avd
          command: |
            SYSTEM_IMAGES="system-images;android-29;default;x86"
            sdkmanager "$SYSTEM_IMAGES"
            echo "no" | avdmanager --verbose create avd -n MTO_emulator -k "$SYSTEM_IMAGES"
      - run:
          name: setup python venv
          command: |
            python3.9 -m venv venv
            . venv/bin/activate
            pip install --upgrade -r requirements.txt
            echo 'export ANDROID_SDK_ROOT="$ANDROID_HOME"' >> $BASH_ENV
            sudo apt-get install libpulse0
      - run:
          name: build androidtestorchestrator
          command: |
            . venv/bin/activate
            pip install -e ./orchestrator
      - save_cache:
          key: image2-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
            - "testsupportapps/.gradle"
      - run:
          name: Run static analysis
          command: |
            . venv/bin/activate
            cd orchestrator/src
      - run:
          name: Running tests
          command: |
            /opt/android/sdk/tools/bin/sdkmanager "system-images;android-28;default;x86_64"
            echo no | /opt/android/sdk/tools/bin/avdmanager create avd -n "MTO_emulator" -k "system-images;android-28;default;x86_64" -d "pixel_xl" --force --abi x86_64
            mkdir -p ~/.android/avd/MTO_emulator.avd/snapshots/default_boot
            touch ~/.android/avd/MTO_emulator.avd/snapshots/default_boot/ram.img
            find ~/.android/avd
            chmod gou+rwx ~/.android/avd/MTO_emulator.avd/snapshots
            chmod gou+rwx ~/.android/avd/MTO_emulator.avd/snapshots/default_boot
            chmod gou+rw ~/.android/avd/MTO_emulator.avd/snapshots/default_boot/ram.img
            ls -ld ~/.android/avd/MTO_emulator.avd/snapshots
            ls -ld ~/.android/avd/MTO_emulator.avd/snapshots/default_boot
            ls -ld ~/.android/avd/MTO_emulator.avd/snapshots/default_boot/ram.img
            echo no | /opt/android/sdk/tools/bin/avdmanager create avd -n "MTO_emulator2" -k "system-images;android-28;default;x86_64" -d "pixel_xl" --force --abi x86_64
            . venv/bin/activate
            cd orchestrator/test
            mkdir -p test-reports/tmp
            /opt/android/sdk/emulator/emulator -list-avds
            CIRCLECI=1 pytest -s -v -m "not localonly" --html  test-reports/report.html --junitxml=test-reports/all-result.xml --basetemp=test-reports/tmp --cov=../src . --cov-report html:test-reports/coverage
      - run:
          name: directory
          command: |
            ls /home/circleci/code/testsupportapps/app/build/outputs/apk/androidTest/debug
            ls /home/circleci/code/testsupportapps/app/build/outputs/apk/debug
            find /home/circleci/code/orchestrator/ -name \*.apk
      - store_artifacts:
          path: orchestrator/test/test-reports/
          destination: python_app

      - store_test_results:
          path: orchestrator/test/test-reports/
workflows:
  build:
    jobs:
      - build